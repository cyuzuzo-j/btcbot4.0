{"trial_id": "026", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activationLSTM", "default": "LeakyReLU", "conditions": [], "values": ["LeakyReLU", "relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 1.0, "step": null, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "bottel", "default": null, "conditions": [], "min_value": 1, "max_value": 20, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activationDense", "default": "LeakyReLU", "conditions": [], "values": ["LeakyReLU", "relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "activationCONV", "default": "LeakyReLU", "conditions": [], "values": ["LeakyReLU", "relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "activationOUT", "default": "LeakyReLU", "conditions": [], "values": ["LeakyReLU", "relu", "sigmoid", "tanh"], "ordered": false}}], "values": {"activationLSTM": "sigmoid", "dropout": 0.10714319172514453, "units": 3, "bottel": 19, "activationDense": "sigmoid", "activationCONV": "tanh", "activationOUT": "sigmoid"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 250, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 215, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 286, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 213, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 52, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: Graph execution error:\n\nDetected at node 'autoencoder/sequential_1/conv1d_transpose/conv1d_transpose' defined at (most recent call last):\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\autoencoder.py\", line 104, in <module>\n      tuner.search(train_values_batches,train_values_batches, epochs=200, validation_data=(test_values_batches, test_values_batches))\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 210, in search\n      self._try_run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 250, in _try_run_and_update_trial\n      self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 215, in _run_and_update_trial\n      results = self.run_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 286, in run_trial\n      obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 213, in _build_and_fit_model\n      results = self.hypermodel.fit(hp, model, *args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 144, in fit\n      return model.fit(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 1694, in fit\n      val_logs = self.evaluate(\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 2040, in evaluate\n      tmp_logs = self.test_function(iterator)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 1820, in test_function\n      return step_function(self, iterator)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 1804, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 1792, in run_step\n      outputs = model.test_step(data)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 1756, in test_step\n      y_pred = self(x, training=False)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 561, in __call__\n      return super().__call__(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\base_layer.py\", line 1132, in __call__\n      outputs = call_fn(inputs, *args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 96, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\autoencoder.py\", line 91, in call\n      decoded = self.decoder(encoded)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\training.py\", line 561, in __call__\n      return super().__call__(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\base_layer.py\", line 1132, in __call__\n      outputs = call_fn(inputs, *args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 96, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\sequential.py\", line 413, in call\n      return super().call(inputs, training=training, mask=mask)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\functional.py\", line 511, in call\n      return self._run_internal_graph(inputs, training=training, mask=mask)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\functional.py\", line 668, in _run_internal_graph\n      outputs = node.layer(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\engine\\base_layer.py\", line 1132, in __call__\n      outputs = call_fn(inputs, *args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 96, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\cyuzu\\Documents\\python_projecten\\btcbot\\venv\\lib\\site-packages\\keras\\layers\\convolutional\\conv1d_transpose.py\", line 249, in call\n      outputs = tf.nn.conv1d_transpose(\nNode: 'autoencoder/sequential_1/conv1d_transpose/conv1d_transpose'\nOOM when allocating tensor with shape[849,19,366] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu\n\t [[{{node autoencoder/sequential_1/conv1d_transpose/conv1d_transpose}}]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\n [Op:__inference_test_function_435867]\n"}